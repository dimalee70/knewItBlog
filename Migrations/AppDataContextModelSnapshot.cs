// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using knewItBlog.EmpDataContext;

namespace blog.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("knewItBlog.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Blog_StatusId");

                    b.Property<int>("Blog_Status_Id");

                    b.Property<DateTime>("DateWriting");

                    b.Property<string>("Text")
                        .HasMaxLength(100000);

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.Property<int?>("UserId");

                    b.Property<int>("User_Id");

                    b.HasKey("Id");

                    b.HasIndex("Blog_StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("knewItBlog.Models.Blog_Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("blog_status")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Blog_Statuses");
                });

            modelBuilder.Entity("knewItBlog.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("knewItBlog.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateRegister");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.Property<int?>("User_StatusId");

                    b.Property<int>("User_status_id");

                    b.HasKey("Id");

                    b.HasIndex("User_StatusId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("knewItBlog.Models.User_Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("User_status")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("User_Statuses");
                });

            modelBuilder.Entity("knewItBlog.Models.Blog", b =>
                {
                    b.HasOne("knewItBlog.Models.Blog_Status")
                        .WithMany("Blogs")
                        .HasForeignKey("Blog_StatusId");

                    b.HasOne("knewItBlog.Models.User")
                        .WithMany("Blogs")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("knewItBlog.Models.User", b =>
                {
                    b.HasOne("knewItBlog.Models.User_Status")
                        .WithMany("Users")
                        .HasForeignKey("User_StatusId");
                });
#pragma warning restore 612, 618
        }
    }
}
